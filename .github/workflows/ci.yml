name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.24.x']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Get dependencies
      run: go mod download
    
    - name: Run unit tests
      run: go test -v ./...
    
    - name: Build binary
      run: go build -v ./...
    
    - name: Install dependencies for integration tests (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick curl
    
    - name: Install dependencies for integration tests (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install imagemagick
        # curl is already available on macOS
    
    - name: Install dependencies for integration tests (Windows)
      if: runner.os == 'Windows'
      run: |
        # Install ImageMagick via chocolatey
        choco install imagemagick -y
        # curl is already available on Windows
        # Refresh environment to get ImageMagick in PATH
        refreshenv
        # Verify magick command is available
        where magick
      shell: pwsh
    
    - name: Run integration tests (Unix)
      if: runner.os != 'Windows'
      run: |
        cd integration
        chmod +x setup-testdata.sh run-integration-tests.sh
        ./setup-testdata.sh
        ./run-integration-tests.sh --basic-only
      shell: bash
    
    - name: Run integration tests (Windows)
      if: runner.os == 'Windows'
      run: |
        cd integration
        # Use bash shell on Windows to run scripts
        bash setup-testdata.sh
        bash run-integration-tests.sh --basic-only
      shell: bash